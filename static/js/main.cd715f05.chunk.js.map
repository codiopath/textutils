{"version":3,"sources":["components/PracticeNavbar.js","components/PracticeTextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["PracticeNavbar","props","react_default","a","createElement","className","concat","themeMode","href","heading","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","name","value","onClick","defaultSwitch","htmlFor","darkSwitch","style","backgroundColor","color","yellowSwitch","greenSwitch","redSwitch","PracticeTextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","onChange","event","target","rows","textAreaCol","newText","toUpperCase","showAlert","buttonBg","toLowerCase","copy","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setThemeMode","_useState3","_useState4","setAlert","_useState5","_useState6","setButtonBg","_useState7","_useState8","settextAreaCol","message","setTimeout","Fragment","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cd715f05.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function PracticeNavbar(props) {\r\n  \r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.themeMode} bg-${props.themeMode}`} >\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.heading}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    \r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          \r\n\r\n\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n          \r\n\r\n        </li> */}\r\n    </ul>\r\n    \r\n\r\n\r\n\r\n      {/* <div className={`form-check form-switch text-${props.themeMode==='light'? 'green': 'light'}`}>\r\n  <label className=\"form-check-label\" htmlFor=\"greenSwitch\">Green Mode</label>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"greenSwitch\" onClick={props.greenSwitch}/>\r\n</div>\r\n      <div className={`form-check form-switch text-${props.themeMode==='light'? 'red': 'light'} mx-3`}>\r\n  <label className=\"form-check-label\" htmlFor=\"redSwitch\">Red Mode</label>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"redSwitch\" onClick={props.redSwitch}/>\r\n</div>\r\n      <div className={`form-check form-switch text-${props.themeMode==='light'? 'dark': 'light'} mx-3`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"mySwitch\" onClick={props.darkSwitch}/>\r\n  <label className=\"form-check-label\" htmlFor=\"mySwitch\">Dark Mode</label>\r\n</div> */}\r\n\r\n<div className={`form-check text-${props.themeMode==='light'? 'dark': 'light'}`}>\r\n  <input className=\"form-check-input\" type=\"radio\" name=\"exampleRadios\" id=\"defaultSwitch\" value=\"option1\" onClick={props.defaultSwitch} />\r\n  <label className=\"form-check-label\" htmlFor=\"defaultSwitch\">\r\n    Default mode\r\n  </label>\r\n  </div>\r\n  <div className={`form-check text-${props.themeMode==='light'? 'dark': 'light'}`}>\r\n  <input className=\"form-check-input mx-2\" type=\"radio\" name=\"exampleRadios\" id=\"darkSwitch\" value=\"option5\" onClick={props.darkSwitch} style={{backgroundColor:'#424e76'}}/>\r\n  <label className=\"form-check-label\" htmlFor=\"darkSwitch\" style={{color:'#424e76'}}>\r\n    Dark mode\r\n  </label>\r\n  </div>\r\n<div className={`form-check text-${props.themeMode==='light'? 'dark':'light'}`}>\r\n  <input className={\"form-check-input mx-2\"} type=\"radio\" name=\"exampleRadios\" id=\"yellowSwitch\" value=\"option2\" onClick={props.yellowSwitch} style={{backgroundColor:'#fbd82b'}}/>\r\n  <label className=\"form-check-label\" htmlFor=\"greenSwitch\" style={{color:'#fbd82b'}}>\r\n    Yellow mode\r\n  </label>\r\n  </div>\r\n<div className={`form-check text-${props.themeMode==='light'? 'dark':'light'}`}>\r\n  <input className={\"form-check-input mx-2\"} type=\"radio\" name=\"exampleRadios\" id=\"greenSwitch\" value=\"option3\" onClick={props.greenSwitch} style={{backgroundColor:'green'}}/>\r\n  <label className=\"form-check-label\" htmlFor=\"greenSwitch\" style={{color:'green'}}>\r\n    Green mode\r\n  </label>\r\n  </div>\r\n<div className={`form-check text-${props.themeMode==='light'? 'dark': 'light'}`}>\r\n  <input className=\"form-check-input mx-2\" type=\"radio\" name=\"exampleRadios\" id=\"redSwitch\" value=\"option4\" onClick={props.redSwitch} style={{backgroundColor:'red'}}/>\r\n  <label className=\"form-check-label\" htmlFor=\"redSwitch\" style={{color:'red'}}>\r\n    Red mode\r\n  </label>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nexport default function PracticeTextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n\r\n  const toUpCase = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to UpperCase\", \"Success\")\r\n  };\r\n\r\n  const toLowCase = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to LowerCase\", \"Success\")\r\n  };\r\n\r\n  const clearText = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared\", \"Success\")\r\n  };\r\n\r\n  const copyText = () => {\r\n    let copy = document.getElementById(\"myBox\");\r\n    copy.select();\r\n    navigator.clipboard.writeText(copy.value);\r\n    props.showAlert(\"Copied to Clipboard\", \"Success\")\r\n\r\n  };\r\n\r\n  const changeText = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const remExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces Removed\", \"Success\")\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container my-2\" >\r\n      <h1>Analyze your Text Here</h1>\r\n      <div className=\"mb-3 my-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          value={text}\r\n          onChange={changeText}\r\n          rows=\"9\" style={props.textAreaCol}\r\n        ></textarea>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary my-2\"\r\n          onClick={toUpCase} style={props.buttonBg}\r\n        >\r\n          Convert to UpperCase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-3 my-2\"\r\n          onClick={toLowCase} style={props.buttonBg}\r\n        >\r\n          Convert to LowerCase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2 my-2\"\r\n          onClick={clearText} style={props.buttonBg}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2 my-2\"\r\n          onClick={copyText} style={props.buttonBg}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2 my-2\" style={props.buttonBg}\r\n          onClick={remExtraSpace}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <p>{text.length>0? text.split(\" \").length: 0} <b>words</b> and {text.length}\r\n          <b> chars</b>\r\n        </p>\r\n        <p>{text.split(\" \").length * 0.08} <b>minutes read</b></p>\r\n        <h2>Preview :</h2>\r\n        <p>{text.length>0? text: <strong>Enter something in the above box to view here.</strong>}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize =(word)=>{\r\n      const lower = word.toLowerCase()\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n\r\n  }\r\n  return (\r\n    props.alert &&\r\n    <div>\r\n     <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport React, { useState } from 'react'\nimport PracticeNavbar from './components/PracticeNavbar';\nimport PracticeTextForm from './components/PracticeTextForm';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import NoMatch from './components/NoMatch';\n\n// import {\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [themeMode, setThemeMode] = useState(\"light\")\n  // const [switchMode, setswitchMode] = useState(\"Dark Mode\")\n  const [alert, setAlert] = useState(null)\n  const [buttonBg, setButtonBg] = useState({\n    backgroundColor: '#0d6ef'\n  })\n  const [textAreaCol, settextAreaCol] = useState({\n    backgroundColor: 'white'\n  })\n\n  const showAlert=(message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(()=>{\n          setAlert(null)\n      }, 1500)\n  }\n\n  // const darkSwitch=()=>{\n  //   if(themeMode===\"light\"){\n      // setThemeMode(\"dark\")\n      // // setswitchMode(\"Dark Mode\")\n      // setButtonBg({\n      //   backgroundColor: \"#424e76\"\n      // })\n      // settextAreaCol({\n      //   backgroundColor: '#424e76'\n      // })\n      // document.body.style.backgroundColor = '#424e76'\n      // document.body.style.color = 'white'\n      // showAlert(\"Dark mode has been enabled\", \"success\")\n  //   }\n\n  //   else{\n  //     setThemeMode(\"light\")\n  //     setButtonBg({\n  //       backgroundColor: \"#4f4fcf\",\n  //       color: \"white\"\n  //     })\n  //     settextAreaCol({\n  //       backgroundColor: 'white'\n  //     })\n  //     // setswitchMode(\"Light Mode\")\n  //     document.body.style.backgroundColor = 'white'\n  //     document.body.style.color = 'black'\n  //     showAlert(\"Light mode has been enabled\", \"success\")\n  //   }\n  // }\n\n  // const redSwitch=()=>{\n    // if(themeMode===\"light\"){\n      // setThemeMode(\"dark\")\n      // setButtonBg({\n      //   backgroundColor: \"red\",\n      //   color: 'black'\n      // })\n      // settextAreaCol({\n      //   backgroundColor: 'red',\n      //   color: 'black'\n      // })\n      // // setswitchMode(\"Dark Mode\")\n      // document.body.style.backgroundColor = 'red'\n      // document.body.style.color = 'black'\n      // showAlert(\"Red mode has been enabled\", \"success\")\n    //   }\n  \n  //   else{\n  //     setThemeMode(\"light\")\n  //     setButtonBg({\n  //       backgroundColor: \"#4f4fcf\",\n  //       color: \"white\"\n  //     })\n  //     settextAreaCol({\n  //       backgroundColor: 'white'\n  //     })\n  //     // setswitchMode(\"Light Mode\")\n  //     document.body.style.backgroundColor = 'white'\n  //     showAlert(\"Light mode has been enabled\", \"success\")\n  //   }\n  // }\n\n\n  // const greenSwitch=()=>{\n  //   if(themeMode===\"light\"){\n      // setThemeMode(\"dark\")\n      // setButtonBg({\n      //   backgroundColor: \"green\",\n      //   color: 'white'\n      // })\n      // settextAreaCol({\n      //   backgroundColor: 'green',\n      //   color: 'white'\n      // })\n      // // setswitchMode(\"Dark Mode\")\n      // document.body.style.backgroundColor = 'green'\n      // document.body.style.color = 'white'\n      // showAlert(\"Green mode has been enabled\", \"success\")\n  //   }\n  \n  //   else{\n      // setThemeMode(\"light\")\n      // setButtonBg({\n      //   backgroundColor: \"#4f4fcf\",\n      //   color: \"white\"\n      // })\n      // settextAreaCol({\n      //   backgroundColor: 'white'\n      // })\n      // // setswitchMode(\"Light Mode\")\n      // document.body.style.backgroundColor = 'white'\n      // document.body.style.color = 'black'\n      // showAlert(\"Light mode has been enabled\", \"success\")\n  //   }\n  // }\n\n\n  const defaultSwitch=()=>{\n    setThemeMode(\"light\")\n    setButtonBg({\n      backgroundColor: \"#4f4fcf\",\n      color: \"white\"\n    })\n    settextAreaCol({\n      backgroundColor: 'white'\n    })\n    // setswitchMode(\"Light Mode\")\n    document.body.style.backgroundColor = 'white'\n    document.body.style.color = 'black'\n    showAlert(\"Dafault mode has been enabled\", \"success\")\n  }\n\n  const darkSwitch=()=>{\n    setThemeMode(\"dark\")\n    // setswitchMode(\"Dark Mode\")\n    setButtonBg({\n      backgroundColor: \"#424e76\"\n    })\n    settextAreaCol({\n      backgroundColor: '#424e76',\n      color: 'white'\n    })\n    document.body.style.backgroundColor = '#424e76'\n    document.body.style.color = 'white'\n    showAlert(\"Dark mode has been enabled\", \"success\")\n  }\n\n  const redSwitch=()=>{\n    setThemeMode(\"dark\")\n    setButtonBg({\n      backgroundColor: \"red\",\n      color: 'black'\n    })\n    settextAreaCol({\n      backgroundColor: 'red',\n      color: 'black'\n    })\n    // setswitchMode(\"Dark Mode\")\n    document.body.style.backgroundColor = 'red'\n    document.body.style.color = 'black'\n    showAlert(\"Red mode has been enabled\", \"success\")\n  }\n  const yellowSwitch=()=>{\n    setThemeMode(\"dark\")\n    setButtonBg({\n      backgroundColor: \"#fbd82b\",\n      color: 'black'\n    })\n    settextAreaCol({\n      backgroundColor: '#fbd82b',\n      color: 'black'\n    })\n    // setswitchMode(\"Dark Mode\")\n    document.body.style.backgroundColor = '#fbd82b'\n    document.body.style.color = 'black'\n    showAlert(\"Red mode has been enabled\", \"success\")\n  }\n\n  const greenSwitch=()=>{\n    setThemeMode(\"dark\")\n    setButtonBg({\n      backgroundColor: \"green\",\n      color: 'white'\n    })\n    settextAreaCol({\n      backgroundColor: 'green',\n      color: 'white'\n    })\n    // setswitchMode(\"Dark Mode\")\n    document.body.style.backgroundColor = 'green'\n    document.body.style.color = 'white'\n    showAlert(\"Green mode has been enabled\", \"success\")\n  }\n\n\n\n  \n  return (\n    <>\n   <PracticeNavbar heading=\"TextUtils\"  themeMode={themeMode} darkSwitch={darkSwitch} redSwitch={redSwitch} greenSwitch={greenSwitch} defaultSwitch={defaultSwitch} yellowSwitch={yellowSwitch}/>\n   <Alert alert={alert}/>\n   \n      \n  \n   <PracticeTextForm themeMode={themeMode} showAlert={showAlert} buttonBg={buttonBg} textAreaCol={textAreaCol}/>\n\n      {/* <Routes>\n        <Route exact path='/' element={<PracticeTextForm themeMode={themeMode} showAlert={showAlert} buttonBg={buttonBg} textAreaCol={textAreaCol}/>}></Route>\n        <Route exact path='about' element={<About />}></Route>\n        <Route exact path='*' element={<NoMatch/>}></Route>\n      </Routes> */}\n\n   {/* <About/> */}\n   </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <BrowserRouter> */}\n    <App />\n    {/* </BrowserRouter> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}